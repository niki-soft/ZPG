
            "vec4 ObjectColor = vec4(1.0f, 0.5f, 0.31f, 1.0f);"
            "float ambientStrength = 0.1;"

            "vec4 lightColor = vec4(0.2f, 0.4f, 0.5f, 1.0f);"
            "vec4 ambient = ambientStrength * lightColor;"
            "vec3 norm = normalize(Normal);"
            "vec3 lightDir = normalize(lightPos - FragPos);"
            "float diff = max(dot(norm, lightDir), 0.0);"
            "vec4 diffuse = diff * lightColor;"
            "vec4 result = (ambient + diffuse) * ObjectColor;"

            "FragColor = vec4(result);"
            "}";



            "vec3 ambient = ambientStrength * lightColor"
            "vec3 result = ambient * barva "

            "glm::vec3 lightColor(1.0f, 1.0f, 1.0f);"
            "vec3 ambient = ambientStrength * lightColor;"
            "vec3 result = ambient * barva"


    "     ex_worldPosition = ModelMatrix * vec4(vp, 1.0f);"
            "     ex_worldNormal = normalMatrix * in_Normal;"



    this->vertex_shader =
            "#version 330\n"
            "layout(location=0) in vec3 vp;"
            "layout(location=1) in vec3 normal;"
            "uniform mat4 ModelMatrix;"
            "uniform mat4 CameraMatrix;"
            "out vec3 barva;"
            "void main () {"
            "     gl_Position = CameraMatrix * ModelMatrix * vec4 (vp, 1.0);"
            "     barva=normal;"
            "}";

    this->fragment_shader =
            "#version 330\n"
            "out vec4 frag_colour;"
            "in vec3 barva;"
            "void main () {"
            "     frag_colour = vec4(barva, 1.0);"
            "}";
